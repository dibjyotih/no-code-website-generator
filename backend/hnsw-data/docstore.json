[["0",{"pageContent":"Component Name: Responsive Navbar. Category: Navigation. Code: import React, { useState } from 'react';\nimport Link from 'next/link';\n\ninterface NavLinkProps {\n  href: string;\n  children: React.ReactNode;\n}\n\nconst NavLink: React.FC<NavLinkProps> = ({ href, children }) => (\n  <Link href={href} className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\">\n    {children}\n  </Link>\n);\n\nconst ResponsiveNavbar: React.FC = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <nav className=\"bg-gray-800\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-16\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <Link href=\"/\" className=\"text-white font-bold text-xl\">YourLogo</Link>\n            </div>\n            <div className=\"hidden md:block\">\n              <div className=\"ml-10 flex items-baseline space-x-4\">\n                <NavLink href=\"/\">Home</NavLink>\n                <NavLink href=\"/about\">About</NavLink>\n                <NavLink href=\"/services\">Services</NavLink>\n                <NavLink href=\"/contact\">Contact</NavLink>\n              </div>\n            </div>\n          </div>\n          <div className=\"-mr-2 flex md:hidden\">\n            <button\n              onClick={() => setIsOpen(!isOpen)}\n              type=\"button\"\n              className=\"bg-gray-900 inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\"\n              aria-controls=\"mobile-menu\"\n              aria-expanded={isOpen}\n            >\n              <span className=\"sr-only\">Open main menu</span>\n              {!isOpen ? (\n                <svg className=\"block h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16M4 18h16\" />\n                </svg>\n              ) : (\n                <svg className=\"block h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              )}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {isOpen && (\n        <div className=\"md:hidden\" id=\"mobile-menu\">\n          <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3\">\n            <NavLink href=\"/\">Home</NavLink>\n            <NavLink href=\"/about\">About</NavLink>\n            <NavLink href=\"/services\">Services</NavLink>\n            <NavLink href=\"/contact\">Contact</NavLink>\n          </div>\n        </div>\n      )}\n    </nav>\n  );\n};\n\nexport default ResponsiveNavbar;","metadata":{"name":"Responsive Navbar","category":"Navigation"}}],["1",{"pageContent":"Component Name: Hero Section with Image. Category: Hero sections. Code: import React from 'react';\nimport Image from 'next/image';\n\nconst HeroSectionWithImage: React.FC = () => {\n  return (\n    <section className=\"bg-white dark:bg-gray-900\">\n      <div className=\"grid max-w-screen-xl px-4 py-8 mx-auto lg:gap-8 xl:gap-0 lg:py-16 lg:grid-cols-12\">\n        <div className=\"mr-auto place-self-center lg:col-span-7\">\n          <h1 className=\"max-w-2xl mb-4 text-4xl font-extrabold tracking-tight leading-none md:text-5xl xl:text-6xl dark:text-white\">Next-Gen Web Solutions</h1>\n          <p className=\"max-w-2xl mb-6 font-light text-gray-500 lg:mb-8 md:text-lg lg:text-xl dark:text-gray-400\">Build and deploy with unparalleled speed and scalability. Our platform provides the tools you need to succeed.</p>\n          <a href=\"#\" className=\"inline-flex items-center justify-center px-5 py-3 mr-3 text-base font-medium text-center text-white rounded-lg bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 dark:focus:ring-blue-900\">\n            Get started\n            <svg className=\"w-5 h-5 ml-2 -mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fillRule=\"evenodd\" d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\" clipRule=\"evenodd\"></path></svg>\n          </a>\n          <a href=\"#\" className=\"inline-flex items-center justify-center px-5 py-3 text-base font-medium text-center text-gray-900 border border-gray-300 rounded-lg hover:bg-gray-100 focus:ring-4 focus:ring-gray-100 dark:text-white dark:border-gray-700 dark:hover:bg-gray-700 dark:focus:ring-gray-800\">\n            Speak to Sales\n          </a> \n        </div>\n        <div className=\"hidden lg:mt-0 lg:col-span-5 lg:flex\">\n          <Image src=\"/placeholder.svg\" alt=\"mockup\" width={500} height={500} />\n        </div>                \n      </div>\n    </section>\n  );\n};\n\nexport default HeroSectionWithImage;","metadata":{"name":"Hero Section with Image","category":"Hero sections"}}],["2",{"pageContent":"Component Name: Contact Form with Validation. Category: Contact forms. Code: import React, { useState } from 'react';\n\ninterface FormData {\n  name: string;\n  email: string;\n  message: string;\n}\n\ninterface FormErrors {\n  name?: string;\n  email?: string;\n  message?: string;\n}\n\nconst ContactForm: React.FC = () => {\n  const [formData, setFormData] = useState<FormData>({ name: '', email: '', message: '' });\n  const [errors, setErrors] = useState<FormErrors>({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitStatus, setSubmitStatus] = useState<'success' | 'error' | null>(null);\n\n  const validate = (): FormErrors => {\n    const newErrors: FormErrors = {};\n    if (!formData.name.trim()) newErrors.name = 'Name is required.';\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required.';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Email address is invalid.';\n    }\n    if (!formData.message.trim()) newErrors.message = 'Message is required.';\n    return newErrors;\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const validationErrors = validate();\n    setErrors(validationErrors);\n    if (Object.keys(validationErrors).length === 0) {\n      setIsSubmitting(true);\n      setSubmitStatus(null);\n      // Simulate API call\n      try {\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        console.log('Form Data Submitted:', formData);\n        setSubmitStatus('success');\n        setFormData({ name: '', email: '', message: '' });\n      } catch (error) {\n        setSubmitStatus('error');\n      } finally {\n        setIsSubmitting(false);\n      }\n    }\n  };\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-4 sm:p-6 lg:p-8 bg-white rounded-xl shadow-lg\">\n      <h2 className=\"text-2xl font-bold text-center text-gray-800 mb-6\">Get in Touch</h2>\n      {submitStatus === 'success' && <div className=\"mb-4 p-4 text-sm text-green-700 bg-green-100 rounded-lg\">Message sent successfully!</div>}\n      {submitStatus === 'error' && <div className=\"mb-4 p-4 text-sm text-red-700 bg-red-100 rounded-lg\">Failed to send message. Please try again.</div>}\n      <form onSubmit={handleSubmit} noValidate>\n        <div className=\"mb-5\">\n          <label htmlFor=\"name\" className=\"block mb-2 text-sm font-medium text-gray-900\">Full Name</label>\n          <input type=\"text\" id=\"name\" name=\"name\" value={formData.name} onChange={handleChange} className={`bg-gray-50 border ${errors.name ? 'border-red-500' : 'border-gray-300'} text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5`} required aria-describedby=\"name-error\" />\n          {errors.name && <p id=\"name-error\" className=\"mt-2 text-sm text-red-600\">{errors.name}</p>}\n        </div>\n        <div className=\"mb-5\">\n          <label htmlFor=\"email\" className=\"block mb-2 text-sm font-medium text-gray-900\">Email Address</label>\n          <input type=\"email\" id=\"email\" name=\"email\" value={formData.email} onChange={handleChange} className={`bg-gray-50 border ${errors.email ? 'border-red-500' : 'border-gray-300'} text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5`} required aria-describedby=\"email-error\" />\n          {errors.email && <p id=\"email-error\" className=\"mt-2 text-sm text-red-600\">{errors.email}</p>}\n        </div>\n        <div className=\"mb-5\">\n          <label htmlFor=\"message\" className=\"block mb-2 text-sm font-medium text-gray-900\">Your Message</label>\n          <textarea id=\"message\" name=\"message\" rows={4} value={formData.message} onChange={handleChange} className={`block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border ${errors.message ? 'border-red-500' : 'border-gray-300'} focus:ring-blue-500 focus:border-blue-500`} required aria-describedby=\"message-error\"></textarea>\n          {errors.message && <p id=\"message-error\" className=\"mt-2 text-sm text-red-600\">{errors.message}</p>}\n        </div>\n        <button type=\"submit\" disabled={isSubmitting} className=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center disabled:bg-gray-400\">\n          {isSubmitting ? 'Sending...' : 'Send Message'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;","metadata":{"name":"Contact Form with Validation","category":"Contact forms"}}],["3",{"pageContent":"Component Name: E-commerce Product Card. Category: Product cards. Code: import React from 'react';\nimport Image from 'next/image';\n\ninterface Product {\n  id: number;\n  name: string;\n  href: string;\n  imageSrc: string;\n  imageAlt: string;\n  price: string;\n  color: string;\n}\n\ninterface ProductCardProps {\n  product: Product;\n}\n\nconst ProductCard: React.FC<ProductCardProps> = ({ product }) => {\n  return (\n    <div key={product.id} className=\"group relative bg-white border border-gray-200 rounded-lg flex flex-col overflow-hidden\">\n      <div className=\"aspect-w-3 aspect-h-4 bg-gray-200 group-hover:opacity-75 sm:aspect-none sm:h-96\">\n        <Image\n          src={product.imageSrc}\n          alt={product.imageAlt}\n          width={400}\n          height={400}\n          className=\"w-full h-full object-center object-cover sm:w-full sm:h-full\"\n        />\n      </div>\n      <div className=\"flex-1 p-4 space-y-2 flex flex-col\">\n        <h3 className=\"text-sm font-medium text-gray-900\">\n          <a href={product.href}>\n            <span aria-hidden=\"true\" className=\"absolute inset-0\" />\n            {product.name}\n          </a>\n        </h3>\n        <p className=\"text-sm text-gray-500\">{product.color}</p>\n        <div className=\"flex-1 flex flex-col justify-end\">\n          <p className=\"text-base font-medium text-gray-900\">{product.price}</p>\n        </div>\n      </div>\n       <div className=\"p-4\">\n        <button className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">Add to Cart</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCard;","metadata":{"name":"E-commerce Product Card","category":"Product cards"}}],["4",{"pageContent":"Component Name: User Registration Form. Category: Authentication UI. Code: import React, { useState } from 'react';\n\nconst RegistrationForm: React.FC = () => {\n  const [formData, setFormData] = useState({ username: '', email: '', password: '', confirmPassword: '' });\n  const [error, setError] = useState('');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    setError('');\n    console.log('Registering user:', { username: formData.username, email: formData.email });\n    // Handle registration logic here\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Create your account</h2>\n        </div>\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          <div className=\"rounded-md shadow-sm -space-y-px\">\n            <div>\n              <label htmlFor=\"username\" className=\"sr-only\">Username</label>\n              <input id=\"username\" name=\"username\" type=\"text\" required className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Username\" onChange={handleChange} />\n            </div>\n            <div>\n              <label htmlFor=\"email-address\" className=\"sr-only\">Email address</label>\n              <input id=\"email-address\" name=\"email\" type=\"email\" autoComplete=\"email\" required className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Email address\" onChange={handleChange} />\n            </div>\n            <div>\n              <label htmlFor=\"password\" className=\"sr-only\">Password</label>\n              <input id=\"password\" name=\"password\" type=\"password\" autoComplete=\"new-password\" required className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Password\" onChange={handleChange} />\n            </div>\n            <div>\n              <label htmlFor=\"confirm-password\" className=\"sr-only\">Confirm Password</label>\n              <input id=\"confirm-password\" name=\"confirmPassword\" type=\"password\" autoComplete=\"new-password\" required className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Confirm Password\" onChange={handleChange} />\n            </div>\n          </div>\n\n          {error && <p className=\"text-red-500 text-sm text-center\">{error}</p>}\n\n          <div>\n            <button type=\"submit\" className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n              Sign up\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default RegistrationForm;","metadata":{"name":"User Registration Form","category":"Authentication UI"}}],["5",{"pageContent":"Component Name: Simple Footer. Category: Navigation. Code: import React from 'react';\nimport Link from 'next/link';\n\nconst SimpleFooter: React.FC = () => {\n  return (\n    <footer className=\"bg-gray-800 text-white\">\n      <div className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"xl:grid xl:grid-cols-3 xl:gap-8\">\n          <div className=\"space-y-8 xl:col-span-1\">\n            <h2 className=\"text-2xl font-bold\">YourLogo</h2>\n            <p className=\"text-gray-400 text-base\">\n              Making the web a more beautiful place.\n            </p>\n          </div>\n          <div className=\"mt-12 grid grid-cols-2 gap-8 xl:mt-0 xl:col-span-2\">\n            <div className=\"md:grid md:grid-cols-2 md:gap-8\">\n              <div>\n                <h3 className=\"text-sm font-semibold text-gray-400 tracking-wider uppercase\">Solutions</h3>\n                <ul className=\"mt-4 space-y-4\">\n                  <li><a href=\"#\" className=\"text-base text-gray-300 hover:text-white\">Marketing</a></li>\n                  <li><a href=\"#\" className=\"text-base text-gray-300 hover:text-white\">Analytics</a></li>\n                </ul>\n              </div>\n              <div className=\"mt-12 md:mt-0\">\n                <h3 className=\"text-sm font-semibold text-gray-400 tracking-wider uppercase\">Support</h3>\n                <ul className=\"mt-4 space-y-4\">\n                  <li><a href=\"#\" className=\"text-base text-gray-300 hover:text-white\">Pricing</a></li>\n                  <li><a href=\"#\" className=\"text-base text-gray-300 hover:text-white\">Docs</a></li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"md:grid md:grid-cols-2 md:gap-8\">\n              <div>\n                <h3 className=\"text-sm font-semibold text-gray-400 tracking-wider uppercase\">Company</h3>\n                <ul className=\"mt-4 space-y-4\">\n                  <li><Link href=\"/about\" className=\"text-base text-gray-300 hover:text-white\">About</Link></li>\n                  <li><a href=\"#\" className=\"text-base text-gray-300 hover:text-white\">Blog</a></li>\n                </ul>\n              </div>\n              <div className=\"mt-12 md:mt-0\">\n                <h3 className=\"text-sm font-semibold text-gray-400 tracking-wider uppercase\">Legal</h3>\n                <ul className=\"mt-4 space-y-4\">\n                  <li><a href=\"#\" className=\"text-base text-gray-300 hover:text-white\">Privacy</a></li>\n                  <li><a href=\"#\" className=\"text-base text-gray-300 hover:text-white\">Terms</a></li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"mt-12 border-t border-gray-700 pt-8\">\n          <p className=\"text-base text-gray-400 xl:text-center\">&copy; 2024 YourCompany, Inc. All rights reserved.</p>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default SimpleFooter;","metadata":{"name":"Simple Footer","category":"Navigation"}}]]